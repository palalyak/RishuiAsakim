// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Ser003_mezuraz_alef_one")]
    public partial class Ser003_Mezuraz_Alef_OneFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "Ser003_mezuraz_alef_one.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Ser003_mezuraz_alef_one", "Testing service 003", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "CodeEssek",
                        "BakashaId"});
            table1.AddRow(new string[] {
                        "17",
                        "110"});
#line 7
    testRunner.Given("tik essek identification", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "NumOfMahuyotInEssek",
                        "NumOfMahuyotInBakasha"});
            table2.AddRow(new string[] {
                        "1",
                        "1"});
#line 11
 testRunner.Given("tik essek data", ((string)(null)), table2, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "NumOfInnerTahanot",
                        "NumOfOuterTahanot"});
            table3.AddRow(new string[] {
                        "1",
                        "1"});
#line 14
    testRunner.Given("tahanot in bakasha", ((string)(null)), table3, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "InnerTahanaName",
                        "OuterTahanaName"});
            table4.AddRow(new string[] {
                        "משרד העבודה והרווחה",
                        "נגישות ביקורת"});
#line 18
 testRunner.Given("tahanot names in bakasha", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "EmailInnerTahana",
                        "EmailOuterTahana"});
            table5.AddRow(new string[] {
                        "nagishut_bikoret@gmail.com",
                        "misrad_avoda@gmail.com"});
#line 22
 testRunner.Given("tahanot emails", ((string)(null)), table5, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "BaalInyanEmail"});
            table6.AddRow(new string[] {
                        "test_be_mezuraz_alef@gmail.com"});
#line 26
    testRunner.Given("baaley inyan in tik essek", ((string)(null)), table6, "Given ");
#line hidden
#line 31
 testRunner.And("Calculate Works Days for day \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("bakashot reset from [ris_t_bakasha]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("system_behavior")]
        [NUnit.Framework.CategoryAttribute("Test")]
        [NUnit.Framework.CategoryAttribute("ser003")]
        [NUnit.Framework.TestCaseAttribute("1", "לידיעה", "נשלח", "no_records", "no_records", "no_records", null)]
        [NUnit.Framework.TestCaseAttribute("2", "לידיעה", "נשלח", "no_records", "no_records", "no_records", null)]
        [NUnit.Framework.TestCaseAttribute("3", "לידיעה", "נשלח", "no_records", "no_records", "no_records", null)]
        public virtual void System_Behavior(string days_Back, string inner_Tahana_Status, string outer_Tahana_Status, string atraa_Letachana_Measheret, string messages_Audit, string haarachat_Moed_Lemahut, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Test",
                    "ser003"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("days_back", days_Back);
            argumentsOfScenario.Add("inner_tahana_status", inner_Tahana_Status);
            argumentsOfScenario.Add("outer_tahana_status", outer_Tahana_Status);
            argumentsOfScenario.Add("atraa_letachana_measheret", atraa_Letachana_Measheret);
            argumentsOfScenario.Add("messages_audit", messages_Audit);
            argumentsOfScenario.Add("haarachat_moed_lemahut", haarachat_Moed_Lemahut);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("system_behavior", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 44
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 45
 testRunner.Given("tik essek in TlvClientsApps", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 46
 testRunner.When(string.Format("update creation day of bakasha to {0}", days_Back), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 47
 testRunner.And(string.Format("update creation day of tahanot to {0}", days_Back), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("execute \"ManagerStationsWorkingProcess\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.Then("tik essek in TlvClientsApps matches input data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.Then(string.Format("inner tahana status should be {0}", inner_Tahana_Status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 51
 testRunner.Then(string.Format("outer tahana status should be {0}", outer_Tahana_Status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 52
 testRunner.Then(string.Format("\"messages audit\" should be {0}", messages_Audit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.Then(string.Format("\"atraa letachana measheret\" should be {0}", atraa_Letachana_Measheret), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
 testRunner.Then(string.Format("\"haarachat moed lemahut\" should be {0}", haarachat_Moed_Lemahut), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
